import Foundation
import XCTest
@testable import Peafowl

final class TokenizerTests: XCTestCase {
    let tokenizer: OrdinaryFormTokenizer = {
        let hand = Hand(drawed: nil, tiles: [])
        return OrdinaryFormTokenizer(hand: hand)
    }()
    
    func testFindEyesTests() {
        XCTAssertEqual(tokenizer.findEyes(from: [
            üÄá, üÄà, üÄá, üÄà, üÄá, üÄà,
            ]).count, 2)
        XCTAssertEqual(tokenizer.findEyes(from: [
            ‰∏ÄÁ≠í,
            ‰∫åÁ≠í,
            ‰∏âÁ≠í,
            ÂõõÁ≠í,
            ‰∫îÁ≠í,
            ‰∫îÁ≠í,
            ]).count, 1)
        XCTAssertEqual(tokenizer.findEyes(from: [
            1.Á≠í!,
            2.Á≠í!,
            1.Á≠í!,
            2.Á≠í!,
            5.Á≠í!,
            5.Á≠í!,
            ]).count, 3)
        XCTAssertEqual(tokenizer.findEyes(from: [
            1.Á≠í!,
            1.Á≠í!,
            1.Á≠í!,
            2.Á≠í!,
            2.Á≠í!,
            1.Á≠í!,
            ]).count, 3)
    }
    
    func testFindTripletMelds() {
        XCTAssertEqual(tokenizer.findTripletMelds(from: [
            1.Á≠í!,
            1.Á≠í!,
            1.Á≠í!,
            1.Á≠í!,
            .east,
            .east,
            ]).count, 1)
        XCTAssertEqual(tokenizer.findTripletMelds(from: [
            1.Á≠í!,
            1.Á≠í!,
            1.Á≠í!,
            .east,
            .east,
            .east,
            ]).count, 2)
        XCTAssertEqual(tokenizer.findTripletMelds(from: [
            1.Á≠í!,
            1.Ëê¨!,
            1.Á≠í!,
            .east,
            .center,
            .east,
            ]).count, 0)
    }
    
    func testFindSequentialMelds() {
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            ]).count, 1)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Ëê¨!,
            3.Á≠í!,
            ]).count, 0)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            4.Á≠í!,
            ]).count, 2)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            4.Á≠í!,
            5.Á≠í!,
            ]).count, 3)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            4.Á≠í!,
            5.Á≠í!,
            6.Á≠í!,
            7.Á≠í!,
            8.Á≠í!,
            9.Á≠í!,
            ]).count, 7)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            8.Á≠í!,
            9.Á≠í!,
            1.Á≠í!,
            ]).count, 0)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            ]).count, 1)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            1.Á≠í!,
            2.Á≠í!,
            3.Á≠í!,
            4.Ëê¨!,
            5.Ëê¨!,
            6.Ëê¨!,
            ]).count, 2)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [
            2.Á≠í!,
            3.Á≠í!,
            4.Á≠í!,
            ]).count, 1)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [ÁôΩ, Êí•, ‰∏≠]).count, 0)
        XCTAssertEqual(tokenizer.findSequentialMelds(from: [Êù±, Ë•ø, Âçó, Âåó]).count, 0)
    }
}
